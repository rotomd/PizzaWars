{"ts":1357261609975,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//var define = require('requirejs').define;\r\n\r\ndefine(['fs', 'path', 'mkdirp', 'jade'], function(fs, path, mkdirp, jade) {\r\n\r\n  var basename = path.basename;\r\n  var dirname = path.dirname;\r\n  var resolve = path.resolve;\r\n  var join = path.join;\r\n\r\n  return function(path, out, options) {\r\n    // filename\r\n    if (out)\r\n      options.filename = out;\r\n\r\n    if (!(path instanceof Array))\r\n      path = [path];\r\n\r\n    // left-over args are file paths\r\n    var files = path;\r\n\r\n    // compile files\r\n    for (var i = 0; i < files.length; i++)\r\n      renderFile(files[i]);\r\n\r\n    /**\r\n     * Process the given path, compiling the jade files found.\r\n     * Always walk the subdirectories.\r\n     */\r\n    function renderFile(path) {\r\n      var re = /\\.jade$/;\r\n      fs.lstat(path, function(err, stat) {\r\n        if (err) throw err;\r\n        // Found jade file\r\n        if (stat.isFile() && re.test(path)) {\r\n          fs.readFile(path, 'utf8', function(err, str) {\r\n            if (err) throw err;\r\n            options.filename = path;\r\n            var fn = jade.compile(str, options).toString().substring(18);\r\n            path = path.replace(re, '.js');\r\n            if (out) path = join(out, basename(path));\r\n            var dir = resolve(dirname(path));\r\n            mkdirp(dir, 0755, function(err){\r\n              if (err) throw err;\r\n              fs.writeFile(path, 'define([\"/scripts/lib/jade/runtime.js\"], function() { return function' + fn + ' });', function(err){\r\n                if (err) throw err;\r\n                //console.log('  33[90mrendered 33[36m%s33[0m', path);\r\n              });\r\n            });\r\n          });\r\n        // Found directory\r\n        } else if (stat.isDirectory()) {\r\n          fs.readdir(path, function(err, files) {\r\n            if (err) throw err;\r\n            var dirfiles = files.map(function(filename) {\r\n              return path + '/' + filename;\r\n            });\r\n            for (var i = 0; i < dirfiles.length; i++)\r\n              renderFile(dirfiles[i]);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":2053}]],"length":2053}
{"contributors":[],"silentsave":false,"ts":1357261783728,"patch":[[{"diffs":[[0,"efine;\r\n"],[-1,"\r\n"],[1,"var fs = require('fs'),\r\n    path = require('path'),\r\n    mkdirp = require('mkdirp'),\r\n    jade = require('jade');\r\n\r\n//"],[0,"define(["]],"start1":37,"start2":37,"length1":18,"length2":136},{"diffs":[[0,"e) {\r\n\r\n"],[-1,"  "],[0,"var base"]],"start1":236,"start2":236,"length1":18,"length2":16},{"diffs":[[0,".basename;\r\n"],[-1,"  "],[0,"var dirname "]],"start1":263,"start2":263,"length1":26,"length2":24},{"diffs":[[0,"h.dirname;\r\n"],[-1,"  "],[0,"var resolve "]],"start1":292,"start2":292,"length1":26,"length2":24},{"diffs":[[0,"solve;\r\n"],[-1,"  "],[0,"var join"]],"start1":325,"start2":325,"length1":18,"length2":16},{"diffs":[[0,"oin;\r\n\r\n"],[-1,"  return"],[1,"exports ="],[0," functio"]],"start1":350,"start2":350,"length1":24,"length2":25},{"diffs":[[0,"\n    }\r\n"],[-1,"  "],[0,"}\r\n"],[1,"//"],[0,"});"]],"start1":2148,"start2":2148,"length1":16,"length2":16}]],"length":2164,"saved":false}
{"ts":1357261988927,"patch":[[{"diffs":[[0,"    }\r\n}"],[1,";"],[0,"\r\n//});"]],"start1":2149,"start2":2149,"length1":15,"length2":16}]],"length":2165,"saved":false}
{"ts":1357262050062,"patch":[[{"diffs":[[0,"\nexports"],[1,".jadeCompile"],[0," = funct"]],"start1":357,"start2":357,"length1":16,"length2":28}]],"length":2177,"saved":false}
