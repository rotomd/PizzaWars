{"ts":1356810612969,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1356810606785,"patch":[[{"diffs":[[1,"define(['fs', 'path', 'mkdirp', 'jade'], function(fs, path, mkdirp, jade) {\r\n\r\n  var basename = path.basename;\r\n  var dirname = path.dirname;\r\n  var resolve = path.resolve;\r\n  var join = path.join;\r\n\r\n  return function(path, out, options) {\r\n    // filename\r\n    if (out)\r\n      options.filename = out;\r\n\r\n    if (!(path instanceof Array))\r\n      path = [path];\r\n\r\n    // left-over args are file paths\r\n    var files = path;\r\n\r\n    // compile files\r\n    for (var i = 0; i < files.length; i++)\r\n      renderFile(files[i]);\r\n\r\n    /**\r\n     * Process the given path, compiling the jade files found.\r\n     * Always walk the subdirectories.\r\n     */\r\n    function renderFile(path) {\r\n      var re = /\\.jade$/;\r\n      fs.lstat(path, function(err, stat) {\r\n        if (err) throw err;\r\n        // Found jade file\r\n        if (stat.isFile() && re.test(path)) {\r\n          fs.readFile(path, 'utf8', function(err, str) {\r\n            if (err) throw err;\r\n            options.filename = path;\r\n            var fn = jade.compile(str, options).toString().substring(18);\r\n            path = path.replace(re, '.js');\r\n            if (out) path = join(out, basename(path));\r\n            var dir = resolve(dirname(path));\r\n            mkdirp(dir, 0755, function(err){\r\n              if (err) throw err;\r\n              fs.writeFile(path, 'define([\"jade-runtime\"], function() { return function' + fn + ' });', function(err){\r\n                if (err) throw err;\r\n                console.log('  33[90mrendered 33[36m%s33[0m', path);\r\n              });\r\n            });\r\n          });\r\n        // Found directory\r\n        } else if (stat.isDirectory()) {\r\n          fs.readdir(path, function(err, files) {\r\n            if (err) throw err;\r\n            var dirfiles = files.map(function(filename) {\r\n              return path + '/' + filename;\r\n            });\r\n            for (var i = 0; i < dirfiles.length; i++)\r\n              renderFile(dirfiles[i]);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":1988}]],"length":1988,"saved":false}
{"ts":1356810676843,"patch":[[{"diffs":[[1,"var define = require('requirejs').define;\r\n\r\n"],[0,"define(['fs', 'p"]],"start1":0,"start2":0,"length1":16,"length2":61}]],"length":2033,"saved":false}
{"ts":1356810731331,"patch":[[{"diffs":[[1,"//"],[0,"var define ="]],"start1":0,"start2":0,"length1":12,"length2":14}]],"length":2035,"saved":false}
{"contributors":[],"silentsave":false,"ts":1356811908868,"patch":[[{"diffs":[[0,"e([\""],[1,"/lib/"],[0,"jade"],[-1,"-"],[1,"/"],[0,"runt"]],"start1":1374,"start2":1374,"length1":13,"length2":18}]],"length":2040,"saved":false}
{"ts":1356811953664,"patch":[[{"diffs":[[0,"/runtime"],[1,".js"],[0,"\"], func"]],"start1":1387,"start2":1387,"length1":16,"length2":19}]],"length":2043,"saved":false}
{"ts":1356811984542,"patch":[[{"diffs":[[0,"efine([\""],[1,"."],[0,"/lib/jad"]],"start1":1370,"start2":1370,"length1":16,"length2":17}]],"length":2044,"saved":false}
{"ts":1356812010010,"patch":[[{"diffs":[[0,"efine([\""],[-1,"."],[1,"/scripts"],[0,"/lib/jad"]],"start1":1370,"start2":1370,"length1":17,"length2":24}]],"length":2051,"saved":false}
{"contributors":[],"silentsave":false,"ts":1356894198757,"patch":[[{"diffs":[[0,"        "],[1,"//"],[0,"console."]],"start1":1516,"start2":1516,"length1":16,"length2":18}]],"length":2053,"saved":false}
